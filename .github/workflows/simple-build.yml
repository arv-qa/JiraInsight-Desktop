name: Simple JAR Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.1)'
        required: true
        default: '1.0.1'
      create_release:
        description: 'Create GitHub release'
        required: true
        default: true
        type: boolean
  push:
    tags:
      - 'v*'

env:
  JAVA_VERSION: '17'
  MAVEN_OPTS: '-Xmx2048m'

jobs:
  build-jar:
    name: Build Executable JAR
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Update version if specified
      if: github.event.inputs.version
      run: |
        mvn versions:set -DnewVersion=${{ github.event.inputs.version }}
        mvn versions:commit
        
    - name: Build executable JAR
      run: |
        echo "üî® Building JiraInsight Desktop..."
        mvn clean compile
        mvn package -DskipTests
        
    - name: Verify JAR creation
      run: |
        echo "üì¶ Verifying JAR file..."
        ls -la target/
        if [ -f target/jira-insight-desktop-*.jar ]; then
          JAR_FILE=$(ls target/jira-insight-desktop-*.jar)
          echo "‚úÖ Executable JAR created successfully: $(basename ${JAR_FILE})"
          echo "üìä File size: $(du -h "${JAR_FILE}" | cut -f1)"
          echo "JAR_FILE=${JAR_FILE}" >> $GITHUB_ENV
          echo "JAR_NAME=$(basename ${JAR_FILE})" >> $GITHUB_ENV
        else
          echo "‚ùå Executable JAR not found"
          exit 1
        fi
        
    - name: Test JAR execution
      run: |
        echo "üß™ Testing JAR execution (headless mode)..."
        timeout 10s java -Djava.awt.headless=true -jar ${{ env.JAR_FILE }} --help || echo "JAR test completed (expected timeout)"
        echo "‚úÖ JAR file is executable"
        
    - name: Create launcher scripts
      run: |
        echo "üìù Creating launcher scripts..."
        mkdir -p release-package
        cp ${{ env.JAR_FILE }} release-package/
        
        # Create Windows launcher
        cat > release-package/run-jira-insight.bat << 'EOF'
        @echo off
        echo Starting JiraInsight Desktop...
        java -Xmx1024m -Dfile.encoding=UTF-8 -jar jira-insight-desktop-${{ github.event.inputs.version || '1.0.0' }}.jar
        if errorlevel 1 (
            echo Error: Failed to start application
            echo Make sure Java 17+ is installed
            pause
        )
        EOF
        
        # Create Unix launcher
        cat > release-package/run-jira-insight.sh << 'EOF'
        #!/bin/bash
        echo "Starting JiraInsight Desktop..."
        java -Xmx1024m -Dfile.encoding=UTF-8 -jar jira-insight-desktop-${{ github.event.inputs.version || '1.0.0' }}.jar
        if [ $? -ne 0 ]; then
            echo "Error: Failed to start application"
            echo "Make sure Java 17+ is installed"
            read -p "Press Enter to continue..."
        fi
        EOF
        chmod +x release-package/run-jira-insight.sh
        
        # Create README
        cat > release-package/README.txt << 'EOF'
        JiraInsight Desktop v${{ github.event.inputs.version || '1.0.0' }}
        =============================================
        
        REQUIREMENTS:
        - Java 17 or higher
        
        QUICK START:
        1. Ensure Java 17+ is installed
        2. Double-click the launcher script for your platform:
           - Windows: run-jira-insight.bat
           - macOS/Linux: run-jira-insight.sh
        3. Or run directly: java -jar jira-insight-desktop-${{ github.event.inputs.version || '1.0.0' }}.jar
        
        FIRST TIME SETUP:
        1. Click "Connect to Jira"
        2. Enter your Jira domain (e.g., company.atlassian.net)
        3. Enter your email and API token
        4. Generate API token: https://id.atlassian.com/manage-profile/security/api-tokens
        
        SUPPORT:
        - GitHub: https://github.com/arv-qa/JiraInsight-Desktop
        - Issues: https://github.com/arv-qa/JiraInsight-Desktop/issues
        EOF
        
        echo "üì¶ Release package contents:"
        ls -la release-package/
        
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: jira-insight-desktop-${{ github.event.inputs.version || '1.0.0' }}-complete
        path: release-package/
        retention-days: 90

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-jar
    if: github.event.inputs.create_release == 'true' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: jira-insight-desktop-${{ github.event.inputs.version || '1.0.0' }}-complete
        path: release-package/
        
    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event.inputs.version }}" ]; then
          VERSION="${{ github.event.inputs.version }}"
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="1.0.0"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "TAG_NAME=v${VERSION}" >> $GITHUB_ENV
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: "JiraInsight Desktop v${{ env.VERSION }}"
        draft: false
        prerelease: false
        body: |
          # üöÄ JiraInsight Desktop v${{ env.VERSION }}
          
          ## üì¶ Download
          
          **Ready-to-run package**: Download `jira-insight-desktop-${{ env.VERSION }}-complete.zip` below
          
          ### What's included:
          - ‚úÖ **Executable JAR**: `jira-insight-desktop-${{ env.VERSION }}.jar`
          - ‚úÖ **Windows Launcher**: `run-jira-insight.bat` (double-click to run)
          - ‚úÖ **macOS/Linux Launcher**: `run-jira-insight.sh` (double-click to run)
          - ‚úÖ **Setup Instructions**: `README.txt` with complete setup guide
          
          ## üöÄ Quick Start
          
          1. **Download** the complete package below
          2. **Extract** the ZIP file
          3. **Run** the launcher for your platform:
             - **Windows**: Double-click `run-jira-insight.bat`
             - **macOS/Linux**: Double-click `run-jira-insight.sh`
          4. **Connect** to your Jira instance and start using!
          
          ## üìã System Requirements
          
          - **Java 17+** (Download from [Adoptium](https://adoptium.net/))
          - **Memory**: 512 MB RAM minimum
          - **Storage**: 200 MB free space
          
          ## üÜï What's New in v${{ env.VERSION }}
          
          - Enhanced build process for better reliability
          - Improved JAR packaging with all dependencies
          - Simplified installation with launcher scripts
          - Better error handling and user feedback
          
          ## üõ†Ô∏è Alternative Installation
          
          If you prefer to run the JAR directly:
          ```bash
          java -jar jira-insight-desktop-${{ env.VERSION }}.jar
          ```
          
          ## üìö Documentation
          
          - [README](https://github.com/arv-qa/JiraInsight-Desktop/blob/main/README.md)
          - [Issues & Support](https://github.com/arv-qa/JiraInsight-Desktop/issues)
          
          ---
          
          **Full Changelog**: [View Changes](https://github.com/${{ github.repository }}/compare/v1.0.0...v${{ env.VERSION }})
          
    - name: Create ZIP package
      run: |
        cd release-package
        zip -r ../jira-insight-desktop-${{ env.VERSION }}-complete.zip .
        cd ..
        ls -la *.zip
        
    - name: Upload Complete Package to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: jira-insight-desktop-${{ env.VERSION }}-complete.zip
        asset_name: jira-insight-desktop-${{ env.VERSION }}-complete.zip
        asset_content_type: application/zip
        
    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-package/jira-insight-desktop-${{ env.VERSION }}.jar
        asset_name: jira-insight-desktop-${{ env.VERSION }}.jar
        asset_content_type: application/java-archive
