name: CI/CD Pipeline (Simplified)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  JAVA_VERSION: '17'
  MAVEN_OPTS: '-Xmx1024m'

jobs:
  test-and-build:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Compile application
      run: mvn clean compile
      
    - name: Run tests
      run: mvn test
      continue-on-error: true
      
    - name: Package application
      run: mvn clean package -DskipTests
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jira-insight-desktop-jar
        path: target/*.jar
        retention-days: 30
        if-no-files-found: warn

  cross-platform-build:
    name: Cross-Platform Build
    runs-on: ${{ matrix.os }}
    needs: test-and-build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build for ${{ matrix.os }}
      run: mvn clean package -DskipTests
      
    - name: Upload platform-specific artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jira-insight-desktop-${{ matrix.os }}
        path: target/*.jar
        retention-days: 30
        if-no-files-found: warn

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test-and-build, cross-platform-build]
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build release artifacts
      run: mvn clean package -DskipTests
      
    - name: Get release version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/*.jar
        body: |
          ## JiraInsight Desktop ${{ steps.get_version.outputs.VERSION }}
          
          ### Features
          - Modern JavaFX desktop application for Jira issue management
          - Secure API token authentication
          - Quick issue search and advanced JQL queries
          - Detailed issue view with subtasks and comments
          
          ### Installation
          1. Download the JAR file
          2. Ensure Java 17+ is installed
          3. Run: `java -jar jira-insight-desktop-${{ steps.get_version.outputs.VERSION }}.jar`
          
          ### System Requirements
          - Java 17 or higher
          - 512MB RAM minimum
          - 100MB disk space
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Generate Javadoc
      run: mvn javadoc:javadoc
      continue-on-error: true
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: success()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/site/apidocs
        destination_dir: javadoc
